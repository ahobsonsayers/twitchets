// Package config provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package config

// Defines values for NotificationService.
const (
	Gotify   NotificationService = "gotify"
	Ntfy     NotificationService = "ntfy"
	Telegram NotificationService = "telegram"
)

// Defines values for Region.
const (
	GBEA Region = "GBEA"
	GBLO Region = "GBLO"
	GBMI Region = "GBMI"
	GBNE Region = "GBNE"
	GBNI Region = "GBNI"
	GBNO Region = "GBNO"
	GBNW Region = "GBNW"
	GBSC Region = "GBSC"
	GBSE Region = "GBSE"
	GBSO Region = "GBSO"
	GBSW Region = "GBSW"
	GBWA Region = "GBWA"
)

// Config defines model for Config.
type Config struct {
	// ApiKey REQUIRED: See README.md for details on how to obtain
	ApiKey *string `json:"apiKey,omitempty"`

	// Country Currently only GB is supported
	Country *string `json:"country,omitempty"`

	// Global Global ticket configuration
	// All available settings are outlined below
	// These settings apply to all tickets by default
	// Individual ticket configuration can override these settings
	// Settings can be added and removed as needed
	// Any setting not specified will use the default
	Global *GlobalTicketListingConfig `json:"global,omitempty"`

	// Notification Notification service configuration
	Notification *NotificationConfig    `json:"notification,omitempty"`
	Tickets      *[]TicketListingConfig `json:"tickets,omitempty"`
}

// GlobalTicketListingConfig Global ticket configuration
// All available settings are outlined below
// These settings apply to all tickets by default
// Individual ticket configuration can override these settings
// Settings can be added and removed as needed
// Any setting not specified will use the default
type GlobalTicketListingConfig struct {
	// Discount Minimum discount (including fee) on the original price as a percentage
	// Default: Any discount (including no discount).
	Discount *float64 `json:"discount,omitempty"`

	// EventSimilarity Event name similarity matching (0.0 - 1.0).
	// Default: 0.9 (allows for minor naming differences)
	EventSimilarity *float64 `json:"eventSimilarity,omitempty"`

	// MaxTicketPrice Maximum price per ticket (including fee) in pounds (£)
	// Default: Any price.
	MaxTicketPrice *float64 `json:"maxTicketPrice,omitempty"`

	// Notification Notification services to use
	// Default: All configured services.
	Notification *[]NotificationService `json:"notification,omitempty"`

	// NumTickets Minimum number of tickets required in listing
	// Default: Any number of tickets.
	NumTickets *int `json:"numTickets,omitempty"`

	// Regions Geographic regions to search for tickets.
	// Default: All regions if not specified.
	// Full list: https://github.com/ahobsonsayers/twigots/blob/main/location.go#L79-L90
	Regions *[]Region `json:"regions,omitempty"`
}

// GotifyConfig defines model for GotifyConfig.
type GotifyConfig struct {
	// Token Application token from Gotify
	Token *string `json:"token,omitempty"`

	// Url Your Gotify server URL
	Url *string `json:"url,omitempty"`
}

// NotificationConfig Notification service configuration
type NotificationConfig struct {
	Gotify   *GotifyConfig   `json:"gotify,omitempty"`
	Ntfy     *NtfyConfig     `json:"ntfy,omitempty"`
	Telegram *TelegramConfig `json:"telegram,omitempty"`
}

// NotificationService defines model for NotificationService.
type NotificationService string

// NtfyConfig defines model for NtfyConfig.
type NtfyConfig struct {
	// Password Optional: for authenticated instances
	Password *string `json:"password,omitempty"`

	// Topic If using https://ntfy.sh, make sure this is unique to you!
	Topic *string `json:"topic,omitempty"`

	// Url You can use the public instance at https://ntfy.sh
	Url *string `json:"url,omitempty"`

	// Username Optional: for authenticated instances
	Username *string `json:"username,omitempty"`
}

// Region A geographic region code.
// Possible values are:
// - GBLO: London
// - GBSO: South
// - GBSW: South West
// - GBSE: South East
// - GBMI: Midlands
// - GBEA: East Anglia
// - GBNO: North
// - GBNE: North East
// - GBNW: North West
// - GBSC: Scotland
// - GBWA: Wales
// - GBNI: Northern Ireland
//
// Full list: https://github.com/ahobsonsayers/twigots/blob/main/location.go#L79-L90
type Region string

// TelegramConfig defines model for TelegramConfig.
type TelegramConfig struct {
	// ChatId Your chat ID or group chat ID
	ChatId *int `json:"chatId,omitempty"`

	// Token Get from @BotFather on Telegram
	Token *string `json:"token,omitempty"`
}

// TicketListingConfig Individual ticket configuration
// Available settings match the global ones
// Settings here override global settings above
// To reset a global setting to its default, use:
// - "" (empty string) for string values
// - [] (empty array) for list values
// - -1 for numeric values
type TicketListingConfig struct {
	// Discount Minimum discount on the original price as a percentage
	// Overrides global setting. To reset to default (any discount), use -1.
	Discount *float64 `json:"discount,omitempty"`

	// Event Event name
	Event *string `json:"event,omitempty"`

	// EventSimilarity Event name similarity matching (0.0 - 1.0).
	// Overrides global setting.
	EventSimilarity *float64 `json:"eventSimilarity,omitempty"`

	// MaxTicketPrice Maximum price per ticket (including fee) in pounds (£)
	// Overrides global setting. To reset to default (any price), use -1.
	MaxTicketPrice *float64 `json:"maxTicketPrice,omitempty"`

	// Notification Notification services to use
	// Overrides global setting. To reset to default (all configured services), use an empty array [].
	Notification *[]NotificationService `json:"notification,omitempty"`

	// NumTickets Number of tickets required in listing
	// Overrides global setting. To reset to default (any number), use -1.
	NumTickets *int `json:"numTickets,omitempty"`

	// Regions Geographic regions to search for tickets
	// Overrides global setting. To reset to default (all regions), use an empty array [].
	Regions *[]Region `json:"regions,omitempty"`
}

// PutConfigJSONRequestBody defines body for PutConfig for application/json ContentType.
type PutConfigJSONRequestBody = Config
